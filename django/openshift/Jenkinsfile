// This file is part of the research.fi API service
//
// Copyright 2019 Ministry of Education and Culture, Finland
//
// :author: CSC - IT Center for Science Ltd., Espoo Finland servicedesk@csc.fi
// :license: MIT
pipeline {
  agent {
    node {
      label 'nodejs' 
    }
  }

  options {
    timeout(time: 5, unit: 'MINUTES') 
  }

  stages {

    stage('Build image') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject() {
              echo "##### BUILD ################################################"

              def buildConfig = openshift.selector("bc", "researchfi-api-build")
              buildConfig.startBuild().logs("-f")


              echo "##### Wait until devel pod is ready ################################################"

              // Get pod running the devel image
              def dcObj = openshift.selector("dc", "api-devel").object()
              def podSelector = openshift.selector("pod", [deployment: "api-devel-${dcObj.status.latestVersion}"])
              podSelector.untilEach {
                  //echo "pod: ${it.name()}"
                  //podname = "${it.name()}"
                  return it.object().status.containerStatuses[0].ready
              }
            }
          }
        }
      }
    }

    //stage('Promote to devel') {
    //  steps {
    //    script {
    //      openshift.withCluster() {
    //        openshift.withProject() {
    //          openshift.tag("researchfi-api-test:latest", "researchfi-api-devel:latest")
    //        }
    //      }
    //    }
    //  }
    //}

    stage('Unit test') {
   
        
              
              

              echo "##### Run unit test ################################################"

              def podname = sh(script: "oc get pod --selector name=researchfi-api-deployment-devel -o jsonpath='{.items[0].metadata.name}'", returnStdout: true)
              echo "Pod name is ${podname}"

              // Execute python unit test
              sh "oc exec ${podname} -- bash -c  'cd webapps && python manage.py test'"
     
    
    }

    //stage('Deploy') {
    //  steps {
    //    script {
    //      openshift.withCluster() {
    //        openshift.withProject() {
    //          def deploymentConfig = openshift.selector("dc", "researchfi-api-deployment")
    //          deploymentConfig.rollout()
    //        }
    //      }
    //    }
    //  }
    //}

    stage('Deploy to production') {
      steps {
        timeout(time: 12, unit: 'HOURS') {
          input message: "Deploy to production?", ok: "Deploy"
        }
        script {
          openshift.withCluster() {
            openshift.withProject() {
              openshift.tag("researchfi-api-devel:latest", "researchfi-api-production:latest")
            }
          }
        }
      }
    }
  }
}